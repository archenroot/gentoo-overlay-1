#
# The Main configuration file which overrides Liferay's default settings.
#
# All defaults are defined in:
# ${liferay.home}/portal/WEB-INF/lib/portal-impl.jar/portal.properties
#
# Documentation: http://goo.gl/Lq4fS
#


#
# Basic Settings
#---------------

#
# Specify the Liferay home directory.
#
liferay.home=@DEST_DIR@
resource.repositories.root=${liferay.home}

#
# Set this property to true if the Setup Wizard should be displayed the
# first the portal is started.
#
setup.wizard.enabled=false

#
# Set the JNDI name to lookup the JDBC data source. If none is set,
# then the portal will attempt to create the JDBC data source based on the
# properties prefixed with "jdbc.default.".
#
# Actual JDBC data source settings through JNDI are defined in:
# @CONF_DIR@/portal-context.xml
#
jdbc.default.jndi.name=jdbc/LiferayPool

#
# Set the JNDI name to lookup the Java Mail session. If none is set, then
# the portal will attempt to create the Java Mail session based on the
# properties prefixed with "mail.session.".
#
# Actual Mail session settings through JNDI are defined in:
# @CONF_DIR@/portal-context.xml
#
#mail.session.jndi.name=mail/MailSession



#
# URI generation
#---------------

#
# Set the HTTP and HTTPs ports when running the portal in a J2EE server that
# is sitting behind another web server like Apache. Set the values to -1 if
# the portal is not running behind another web server like Apache.
#
#web.server.http.port=-1
#web.server.https.port=-1

#
# Set the hostname that will be used when the portlet generates URLs.
# Leaving this blank will mean the host is derived from the servlet
# container.
#
#web.server.host=

#
# Set the preferred protocol.
#
#web.server.protocol=https



#
# Document Library
#-----------------

#
# Set the name of a class that implements
# com.liferay.portlet.documentlibrary.store.Store. The
# document library server will use this to persist documents.
#
dl.store.impl=com.liferay.portlet.documentlibrary.store.FileSystemStore
#dl.store.impl=com.liferay.portlet.documentlibrary.store.AdvancedFileSystemStore
#dl.store.impl=com.liferay.portlet.documentlibrary.store.CMISStore
#dl.store.impl=com.liferay.portlet.documentlibrary.store.DBStore
#dl.store.impl=com.liferay.portlet.documentlibrary.store.JCRStore

#
# FileSystemStore
#
#dl.store.file.system.root.dir=${liferay.home}/data/document_library

#
# CMISStore
#
#dl.store.cmis.credentials.username=none
#dl.store.cmis.credentials.password=none
#dl.store.cmis.repository.url=http://localhost:8080/alfresco/service/api/cmis
#dl.store.cmis.system.root.dir=Liferay Home

#
# Set the maximum file size and valid file extensions for documents. A value
# of 0 for the maximum file size can be used to indicate unlimited file
# size. However, the maximum file size allowed is set in the property
# "com.liferay.portal.upload.UploadServletRequestImpl.max.size".
#
#dl.file.max.size=3072000



#
# Security
#---------

#
# Set this to false to disallow strangers to create accounts and register
# themselves on the portal.
#
#company.security.strangers=true

#
# Set this to true to ensure users login with https. If this is set to true
# and you want your HTTP session to contain your credentials after logging
# in, then the property "session.enable.phishing.protection" must be set to
# false or your credentials will only be available in the HTTPS session.
#
#company.security.auth.requires.https=false

#
# Set this to true to invalidate the session when a user logs into the
# portal. This helps prevents phishing. Set this to false if you need the
# guest user and the authenticated user to have the same session.
#
# Set this to false if the property "company.security.auth.requires.https"
# is set to true and you want to maintain the same credentials across HTTP
# and HTTPS sessions.
#
#session.enable.phishing.protection=true

#
# Set this to true to enable reminder queries that are used to help reset a
# user's password.
#
users.reminder.queries.enabled=false
users.reminder.queries.custom.question.enabled=false

#
# The portal can authenticate users based on their email address, screen
# name, or user id.
#
company.security.auth.type=emailAddress
#company.security.auth.type=screenName
#company.security.auth.type=userId

#
# Set this property to true to enable JSON web services. Note that setting
# this to false will cause portlets that make JSON web service calls from
# working.
#
json.web.service.enabled=false



#
# Auto Deploy
#------------

#
# Set this to false to disable auto deploy of layout templates, portlets, and
# themes.
#
#auto.deploy.enabled=true

#
# Set the directory to scan for layout templates, portlets, and themes to
# auto deploy.
#auto.deploy.deploy.dir=${liferay.home}/deploy

#
# Set the directory where auto deployed WARs are copied to. The application
# server or servlet container must know to listen on that directory.
#
auto.deploy.dest.dir=${liferay.home}/plugins

#
# Set the path to Tomcat's configuration directory. This property is used to
# auto deploy exploded WARs. Tomcat context XML fiels found in the auto
# deploy directory will be copied to Tomcat's configuration directory. The
# context XML file must have a docBase attribute that points to a valid WAR
# directory.
#
auto.deploy.tomcat.conf.dir=${liferay.home}/conf/Catalina/localhost

#
# Set this to true if plugins should automatically copy Commons Logging.
#
auto.deploy.copy.commons.logging=false

#
# Set this to true if plugins should automatically copy Log4j.
#
auto.deploy.copy.log4j=false



#
# External Dependencies
#----------------------

# 
# Set this to true to enable ImageMagick. You must install Ghostscript and 
# Imagemagick. See http://www.ghostscript.com and http://www.imagemagick.org 
# for more information. 
# 
# The search path should point to the directories for the ImageMagick and 
# Ghostscript executables. You may also need to configure the path for fonts 
# used by Ghostscript when in Apple or Unix environments. 
# 
imagemagick.enabled=false 
imagemagick.global.search.path[unix]=/usr/local/bin:/usr/local/share/ghostscript/fonts:/usr/local/share/fonts/urw-fonts
