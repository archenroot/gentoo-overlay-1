#
# The Main configuration file which overrides Liferay's default settings.
#
# All defaults are defined in:
# ${liferay.home}/portal/WEB-INF/lib/portal-impl.jar/portal.properties
#
# Documentation: http://goo.gl/Lq4fS
#


#
# Basic Settings
#---------------

#
# Specify the Liferay home directory.
#
liferay.home=@DEST_DIR@
resource.repositories.root=${liferay.home}

#
# Set this property to true if the Setup Wizard should be displayed the
# first the portal is started.
#
setup.wizard.enabled=false

#
# Set the JNDI name to lookup the JDBC data source. If none is set,
# then the portal will attempt to create the JDBC data source based on the
# properties prefixed with "jdbc.default.".
#
# Actual JDBC data source settings through JNDI are defined in:
# /etc/liferay-6.1/portal-context.xml
#
jdbc.default.jndi.name=jdbc/LiferayPool

#
# Set the JNDI name to lookup the Java Mail session. If none is set, then
# the portal will attempt to create the Java Mail session based on the
# properties prefixed with "mail.session.".
#
# Actual Mail session settings through JNDI are defined in:
# /etc/liferay-6.1/portal-context.xml
#
#mail.session.jndi.name=mail/MailSession



#
# URI generation
#---------------

#
# Set the HTTP and HTTPs ports when running the portal in a J2EE server that
# is sitting behind another web server like Apache. Set the values to -1 if
# the portal is not running behind another web server like Apache.
#
#web.server.http.port=-1
#web.server.https.port=-1

#
# Set the hostname that will be used when the portlet generates URLs.
# Leaving this blank will mean the host is derived from the servlet
# container.
#
#web.server.host=

#
# Set the preferred protocol.
#
#web.server.protocol=https



#
# Document Library
#-----------------

#
# Set the name of a class that implements
# com.liferay.portlet.documentlibrary.store.Store. The
# document library server will use this to persist documents.
#
dl.store.impl=com.liferay.portlet.documentlibrary.store.FileSystemStore
#dl.store.impl=com.liferay.portlet.documentlibrary.store.AdvancedFileSystemStore
#dl.store.impl=com.liferay.portlet.documentlibrary.store.CMISStore
#dl.store.impl=com.liferay.portlet.documentlibrary.store.DBStore
#dl.store.impl=com.liferay.portlet.documentlibrary.store.JCRStore

#
# FileSystemStore
#
#dl.store.file.system.root.dir=${liferay.home}/data/document_library

#
# CMISStore
#
#dl.store.cmis.credentials.username=none
#dl.store.cmis.credentials.password=none
#dl.store.cmis.repository.url=http://localhost:8080/alfresco/service/api/cmis
#dl.store.cmis.system.root.dir=Liferay Home

#
# Set the maximum file size and valid file extensions for documents. A value
# of 0 for the maximum file size can be used to indicate unlimited file
# size. However, the maximum file size allowed is set in the property
# "com.liferay.portal.upload.UploadServletRequestImpl.max.size".
#
#dl.file.max.size=3072000



#
# Security
#---------

#
# Set this to true to ensure users login with https. If this is set to true
# and you want your HTTP session to contain your credentials after logging
# in, then the property "session.enable.phishing.protection" must be set to
# false or your credentials will only be available in the HTTPS session.
#
#company.security.auth.requires.https=false

#
# Set this to false to disallow strangers to create accounts and register
# themselves on the portal.
#
company.security.strangers=false

#
# Set this to false to disallow users to ask the portal to send them their
# password, resp. password reset link.
#
#company.security.send.password=true
#company.security.send.password.reset.link=true

#
# Set this to false to disable reminder queries that are used to help reset a
# user's password.
#
#users.reminder.queries.enabled=true
#users.reminder.queries.custom.question.enabled=true

#
# The portal can authenticate users based on their email address, screen
# name, or user id.
#
company.security.auth.type=emailAddress
#company.security.auth.type=screenName
#company.security.auth.type=userId

#
# Set this to true to disable any users from logging into the portal.
# Preventing users from logging into the portal provides a read-only version
# of the portal that can be used to minimize site outages during upgrades.
#
#auth.login.disabled=false

#
# Set this to false to disable password checking by the internal portal
# authentication and delegate it to the authenticators configured in
# "auth.pipeline.pre" and "auth.pipeline.post" settings only.
#
# WARNING: Disable this only if local accounts are disabled, e.g. 
# "ldap.auth.required" is set to true! Otherwise NO PASSWORD CHECKS are
# performed when logging as some local user!
#
#auth.pipeline.enable.liferay.check=true

#
# Input a list of comma delimited class names that implement
# com.liferay.portal.security.auth.AutoLogin. These classes will run in
# consecutive order for all unauthenticated users until one of them return a
# valid user id and password combination. If no valid combination is
# returned, then the request continues to process normally. If a valid
# combination is returned, then the portal will automatically login that
# user with the returned user id and password combination.
#
# For example, com.liferay.portal.security.auth.RememberMeAutoLogin reads
# from a cookie to automatically log in a user who previously logged in
# while checking on the "Remember Me" box.
#
# Comment out the following to enable all built-in hooks:
#    com.liferay.portal.security.auth.CASAutoLogin,
#    com.liferay.portal.security.auth.FacebookAutoLogin,
#    com.liferay.portal.security.auth.NtlmAutoLogin,
#    com.liferay.portal.security.auth.OpenIdAutoLogin,
#    com.liferay.portal.security.auth.OpenSSOAutoLogin,
#    com.liferay.portal.security.auth.RememberMeAutoLogin,
#    com.liferay.portal.security.auth.SiteMinderAutoLogin
#
auto.login.hooks=com.liferay.portal.security.auth.RememberMeAutoLogin

#
# Set this to false to disable OpenId authentication. If set to true, then the
# property "auto.login.hooks" must contain a reference to the class
# com.liferay.portal.security.auth.OpenIdAutoLogin.
#
open.id.auth.enabled=false

#
# Set this to true to invalidate the session when a user logs into the
# portal. This helps prevents phishing. Set this to false if you need the
# guest user and the authenticated user to have the same session.
#
# Set this to false if the property "company.security.auth.requires.https"
# is set to true and you want to maintain the same credentials across HTTP
# and HTTPS sessions.
#
#session.enable.phishing.protection=true

#
# Set this property to false to disable JSON web services. Note that this will
# cause portlets that make JSON web service calls from working.
#
json.web.service.enabled=false



#
# LDAP Authentication and Synchronization
#----------------------------------------

#
# Set this to true to enable LDAP authentication.
# Note: These settings can be overrided from the Admin portlet.
#
ldap.auth.enabled=false

#
# Setting this to true means that you must successfully bind with the record 
# in the LDAP server before Liferay will allow the user to log in. 
# This disables Liferay's local accounts.
#
#ldap.auth.required=false

#
# Set this to true to use the LDAP's password policy instead of the portal
# password policy.
#
#ldap.password.policy.enabled=false

#
# Set this to false when the LDAP user's password should not be imported.
#
# Note: This is quite buggy, Liferay is checking user's local password before
# contacting LDAP so no one can login.
#
#ldap.import.user.password.enabled=true

#
# Set this to true to autogenerate the password for imported users from LDAP
# This property is only in use if the properties
# "ldap.import.user.password.enabled" and "ldap.password.policy.enabled" are
# set to false. Otherwise NullPointerException is throwed when used with LDAP
# password policy.
#
#ldap.import.user.password.autogenerated=false

#
# Set this to true to enable mass import of users on the specified interval.
#
ldap.import.enabled=false

#
# The number of minutes to pass before importing all LDAP users.
#
#ldap.import.interval=10

#
# Set this to true to run mass import of users on startup.
#
#ldap.import.on.startup=false

#
# Specify whether group DN lookups will be cached during LDAP import and
# login. If set to true, this will speed up LDAP import and login, but
# updates to group attributes will not be recognized until the cache entry
# expires. The cache size and timeout may be configured in the configuration
# file specifed in the property "ehcache.single.vm.config.location".
#
#ldap.import.group.cache.enabled=true

#
# Set the lock expiration time for LDAP import. By default, the expiration
# time is 1 day.
#
#ldap.import.lock.expiration.time=86400000

#
# Set this to true if the portal should automatically create a role per
# group imported from LDAP. The role will be assigned to the group so that
# users can automatically inherit that role when they are assigned to the
# group.
#
#ldap.import.create.role.per.group=false

#
# Set the page size for directory servers that support paging.
#
ldap.page.size=500

#
# Set the values used to connect to a LDAP store.
#
# The list of properties must end with a subsequent integer (0, 1, etc.) and
# it is assumed that the list has reached an end when the pattern or
# replacement is not set.
#
ldap.base.provider.url.0=ldaps://ldap.example.org:636
ldap.base.dn.0=o=example.org
ldap.security.principal.0=
ldap.security.credentials.0=

#
# The user and group search base restricts the LDAP group query to a sub 
# section of tree on the LDAP server.
#
ldap.users.dn.0=ou=People,o=example.org
ldap.groups.dn.0=ou=Groups,o=example.org

#
# The query to select all objects that represent the users and groups to import.
#
ldap.import.user.search.filter.0=(objectClass=inetOrgPerson)
ldap.import.group.search.filter.0=(objectClass=groupOfUniqueNames)

#
# Whatever you type in as your login, Liferay will search for in LDAP. Liferay 
# will determine if there is a match, according to this filter. Examples: 
#    (mail=@email_address@)
#	 (screenName=@screen_name@)
#    (uid=@user_id@)
#
ldap.auth.search.filter.0=(mail=@email_address@)

#
# When importing and exporting users, the portal will use this mapping to
# connect LDAP user attributes and portal attributes. 
# See com.liferay.portal.model.UserModel and com.liferay.portal.model.ContactModel 
# for a list of attributes.
#
# Note: These properties can be empty, but MUST BE SET! Otherwise 
# NullPointerException is thrown.
#
ldap.user.mappings.0=uuid=uuid\nscreenName=uid\nemailAddress=mail\nfirstName=givenName\nlastName=sn
ldap.user.custom.mappings.0=
ldap.contact.mappings.0=
ldap.contact.custom.mappings.0=
ldap.group.mappings.0=groupName=cn\ndescription=description\nuser=uniqueMember



#
# Auto Deploy
#------------

#
# Set this to false to disable auto deploy of layout templates, portlets, and
# themes.
#
#auto.deploy.enabled=true

#
# Set the directory to scan for layout templates, portlets, and themes to
# auto deploy.
#auto.deploy.deploy.dir=${liferay.home}/deploy

#
# Set the directory where auto deployed WARs are copied to. The application
# server or servlet container must know to listen on that directory.
#
auto.deploy.dest.dir=${liferay.home}/plugins

#
# Set the path to Tomcat's configuration directory. This property is used to
# auto deploy exploded WARs. Tomcat context XML fiels found in the auto
# deploy directory will be copied to Tomcat's configuration directory. The
# context XML file must have a docBase attribute that points to a valid WAR
# directory.
#
auto.deploy.tomcat.conf.dir=${liferay.home}/conf/Catalina/localhost

#
# Set this to false if plugins should not automatically copy Commons Logging.
#
auto.deploy.copy.commons.logging=false

#
# Set this to false if plugins should not automatically copy Log4j.
#
auto.deploy.copy.log4j=false



#
# Servlet Filters
#----------------
# Some selected filters which you can disable for better performance.

# The auto login filter processes the classes in the property
# "auto.login.hooks" to provide auto login functionality.
com.liferay.portal.servlet.filters.autologin.AutoLoginFilter=true

# The CAS filter is used to provide CAS based single sign on.
com.liferay.portal.servlet.filters.sso.cas.CASFilter=false

# If the user can unzip compressed HTTP content, the GZip filter will
# zip up the HTTP content before sending it to the user. This will speed up
# page rendering for users that are on dial up.
com.liferay.portal.servlet.filters.gzip.GZipFilter=false

# The header filter is used to set request headers.
com.liferay.portal.servlet.filters.header.HeaderFilter=true

# The ignore filter will ignore certain files from being accessed directly
# from a browser.
com.liferay.portal.servlet.filters.ignore.IgnoreFilter=true

# The I18n filter is used to internationalize URLs. See the property
# "locale.prepend.friendly.url.style" for more information.
com.liferay.portal.servlet.filters.i18n.I18nFilter=false

# The monitoring filter monitors portal request performance.
com.liferay.portal.servlet.filters.monitoring.MonitoringFilter=true

# The NTLM filter is used to provide NTLM based single sign on.
com.liferay.portal.servlet.filters.sso.ntlm.NtlmFilter=false

# The NTLM post filter is used to fix known issues with NTLM and ajax
# requests. See LPS-3795.
com.liferay.portal.servlet.filters.sso.ntlm.NtlmPostFilter=false

# The OpenSSO filter is used to provide OpenSSO based single sign on.
com.liferay.portal.servlet.filters.sso.opensso.OpenSSOFilter=false

# The secure filter is used to protect servlets based on IP and protocol.
# See the properties "*.servlet.hosts.allowed" and "*.servlet.https.required".
com.liferay.portal.servlet.filters.secure.SecureFilter=true

# The Sharepoint filter allows users to access documents in the Document
# Library directly from Microsoft Office using the Sharepoint protocol.
com.liferay.portal.sharepoint.SharepointFilter=false

# The virtual host filter maps hosts to public and private pages. For
# example, if the public virtual host is www.helloworld.com and the friendly
# URL is /helloworld, then http://www.helloworld.com is mapped to
# http://localhost:8080/web/helloworld.
com.liferay.portal.servlet.filters.virtualhost.VirtualHostFilter=true



#
# External Dependencies
#----------------------

# 
# Set this to true to enable ImageMagick. You must install Ghostscript and 
# Imagemagick. See http://www.ghostscript.com and http://www.imagemagick.org 
# for more information. 
# 
# The search path should point to the directories for the ImageMagick and 
# Ghostscript executables. You may also need to configure the path for fonts 
# used by Ghostscript when in Apple or Unix environments. 
# 
imagemagick.enabled=false 
imagemagick.global.search.path[unix]=/usr/local/bin:/usr/local/share/ghostscript/fonts:/usr/local/share/fonts/urw-fonts



#
# Miscellaneous settings
#-----------------------

#
# Set this to false if you don't want to bother users with approving the
# terms of use.
#
terms.of.use.required=false
